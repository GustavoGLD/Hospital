@startuml
title Funcionamento interno do DataService - Carregamento de dados

' O arquivo JSON que serve como fonte de dados
package "Arquivo JSON" {
  entity "Arquivo JSON" as JSON_File {
  + dados: json
}
}

package "Models" {
    class DataModel {
      + cirurgias: List
      + profissionais: List
      + salas: List
      + equipes: List

      + load_from_json(json_data: json): void
    }
}

package "Repositories" {
    class CirurgyRepository {
      + get_all(): List<CirurgyEntity>
    }

    class ProfessionalRepository {
      + get_all(): List<ProfessionalEntity>
    }

    class RoomRepository {
      + get_all(): List<RoomEntity>
    }

    class TeamRepository {
      + get_all(): List<TeamEntity>
    }
}

' DataService que coordena a carga e o acesso aos repositórios
class DataService {
  - cirurgy_repository: CirurgyRepository
  - professional_repository: ProfessionalRepository
  - room_repository: RoomRepository
  - team_repository: TeamRepository
  --
  + load_data(): void
  + get_cirurgy_repository(): CirurgyRepository
  + get_professional_repository(): ProfessionalRepository
  + get_room_repository(): RoomRepository
  + get_team_repository(): TeamRepository
}

' Relacionamentos e fluxo de dados
JSON_File --> DataModel : "Carrega dados do arquivo JSON para um Model"
DataModel --> CirurgyRepository : "Inicializa os Repositórios"
DataModel --> ProfessionalRepository
DataModel --> RoomRepository
DataModel --> TeamRepository

' Notas explicativas
note top of Models
    Models: Representação de dados das entidades do sistema
end note

note top of Repositories
    Repositories: Responsáveis por gerenciar o acesso
    de dados para os diferentes agrupamentos de entidades
    (Cirurgias, Profissionais, Salas, Equipes...)
end note

@enduml
